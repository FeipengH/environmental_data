dat_fl = read.csv("/Users/stonehuang/Documents/environmental_data/data/trees_FL.csv")
head(dat_fl)
barplot(dat_fl$ProbabilityofFailure)
?barplot
table(dat_fl$ProbabilityofFailure)
barplot(table(dat_fl$ProbabilityofFailure))
dat_fl = read.csv("/Users/stonehuang/Documents/environmental_data/data/trees_FL.csv")
head(dat_fl)
table(dat_fl$ProbabilityofFailure)
barplot(table(dat_fl$ProbabilityofFailure), ylab = "counts of trees", xlab = "probability of failure class")
barplot(table(dat_fl$ProbabilityofFailure), ylab = "counts of trees", xlab = "probability of failure class", main = "barplot of counts of trees in each probability of failure class")
barplot(table(dat_fl$Failure_Standardized), ylab = "counts of trees", xlab = "failure classes", main = "barplot of the counts of trees in each of the failure classes")
hist(dat_fl$DBH_in)
hist(dat_fl$DBH_in, xlab = "DBH", main = "histogram of DBH")
barplot(table(dat_fl$ProbabilityofFailure), ylab = "Counts of trees", xlab = "Probability of failure class", main = "Barplot of counts of trees in each probability of failure class")
barplot(table(dat_fl$Failure_Standardized), ylab = "Counts of trees", xlab = "Failure classes", main = "Barplot of the counts of trees in each of the failure classes")
hist(dat_fl$DBH_in, xlab = "DBH", main = "Histogram of DBH")
head(dat_fl)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "scatterplot of DBH and tree height")
#Q15
dat_fl = read.csv("/Users/stonehuang/Documents/environmental_data/data/trees_FL.csv")
head(dat_fl)
#Q15
dat_fl = read.csv("/Users/stonehuang/Documents/environmental_data/data/trees_FL.csv")
barplot(table(dat_fl$ProbabilityofFailure), ylab = "Counts of trees", xlab = "Probability of failure class", main = "Barplot of counts of trees in each probability of failure class")
barplot(table(dat_fl$Failure_Standardized), ylab = "Counts of trees", xlab = "Failure classes", main = "Barplot of the counts of trees in each of the failure classes")
hist(dat_fl$DBH_in, xlab = "DBH", main = "Histogram of DBH")
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height")
#Q6
boxplot(body_mass_g ~ species, data = penguins)
#Q7
boxplot(body_mass_g ~ sex, data = penguins)
head(dat_fl)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
DBH_whole = subset(dat_fl$DBH_in, Failure_Standardized == whole)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
DBH_whole = subset(DBH_in, Failure_Standardized == whole)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
DBH_whole = subset(dat_fl, Failure_Standardized == whole)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
DBH_whole = subset(dat_fl, Failure_Standardized == "whole")
none = subset(dat_fl, Failure_Standardized == "none")
ks.test(whole$DBH_in, none$DBH_in)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
whole = subset(dat_fl, Failure_Standardized == "whole")
none = subset(dat_fl, Failure_Standardized == "none")
ks.test(whole$DBH_in, none$DBH_in)
#Q16. The null hypothesis for the Kolmogorov-Smirnov test is that there is no difference in DBH between whole-tree failures and intact trees.
#Q17
whole = subset(dat_fl, Failure_Standardized == "whole")
whole
none = subset(dat_fl, Failure_Standardized == "none")
none
ks.test(whole$DBH_in, none$DBH_in)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height")
#Q18. Tree height increases with increasing DBH. The relationship is curved and monotonic.
#Q19. Spearman
cor.test(
dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
use='complete.obs',
method='spearman')
#Q18. Tree height increases with increasing DBH. The relationship is curved and monotonic.
#Q19. Spearman
cor.test(
dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
method='spearman')
dat_fl$DBH_in
dat_fl$HeighttoTop_ft
#Q18. Tree height increases with increasing DBH. The relationship is curved and monotonic.
#Q19. Spearman
cor.test(
dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
method='spearman')
#Q18. Tree height increases with increasing DBH. The relationship is curved and monotonic.
#Q19. Spearman
cor.test(
dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
method='spearman'
exact=FALSE)
#Q18. Tree height increases with increasing DBH. The relationship is curved and monotonic.
#Q19. Spearman
cor.test(
dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
method='spearman',
exact=FALSE)
?cor.test
#Q21.
dat_fl$fail = factor(dat_fl$Failure_Standardized != "none")
levels(dat_fl$fail) = c("No Fail", "Fail")
levels(dat_fl$fail) = c("No Fail", "Fail")
fl_table_2 = table(
dat_fl$ProbabilityofFailure,
dat_fl$fail)
fl_table_2
chisq.test(fl_table_2)
chisq_trees = chisq.test(fl_table_2)
chisq_trees
#Q22.
round(
chisq_trees$observed - chisq_trees$expected,
digits = 1)
#Q22. -135.7
round(
chisq_trees$observed - chisq_trees$expected,
digits = 0)
chisq_trees$observed
chisq_trees$expected
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height", cex = 1)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height", cex = 0.1)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height", cex = 0.01)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height", cex = 0.05)
plot(dat_fl$HeighttoTop_ft ~ dat_fl$DBH_in, ylab = "Tree height", xlab = "DBH", main = "Scatterplot of DBH and tree height", cex = 0.1)
#Q6
boxplot(body_mass_g ~ species, data = penguins)
#Q3
fit_species = lm(formula = body_mass_g ~ species, data = penguins, main = "Boxplot for the fit_species model")
#Q6
boxplot(body_mass_g ~ species, data = penguins, main = "Boxplot for the fit_species model")
#Q7
boxplot(body_mass_g ~ sex, data = penguins, main = "Boxplot for the fit_sex model")
#Q8
boxplot(body_mass_g ~ sex*species, data = penguins, las = 3, names = c("female \n Adelie", "male \n Adelie", "female \n Chinstrap", "male \n Chinstrap", "female \n Gentoo", "male \n Gentoo"), ylab = "body mass (g)", xlab = "", main = "Boxplot for the fit_both model")
#Q6
boxplot(body_mass_g ~ species, data = penguins, main = "Boxplot for the fit_species model")
catrate = read.csv("/Users/stonehuang/Documents/environmental_data/data/catrate.csv")
head(catrate)
summary(catrate)
hist(cat.rate)
hist(catrate$cat.rate)
shapiro.test(catrate$cat.rate)
#Q1
hist(catrate$cat.rate, xlab = "Catastrophe Rate", main = "Histogram of Catastrophe Rate")
#Q1
hist(catrate$cat.rate, xlab = "Catastrophe Rate", main = "Histogram of Catastrophe Rates")
#Q2
shapiro.test(catrate$cat.rate)
t.test(catrate$cat.rate, mu = 2/7)
#Q3. The null hypothesis for the Shapiro-Wilk test is that the data were sampled from a normally-distributed population.
#Q4. There is strong evidence that the sample came from a non-normally-distributed population.
#Q5.
t.test(catrate$cat.rate, mu = 2/7)
#Q6. The catastrophic rate is equal to the pond late-filling rate.
#Q7. This is a two-tailed test.
#Q8. p-value = 0.01193 ????????????
#Q9. 0.3526250 0.7261295, it does not include 0
#Q10. I conclude that there is strong evidence to reject the null hypothesis because the p-value is lower than 0.05.
wilcox.test(catrate$cat.rate, mu = 2 / 7)
#Q6. The catastrophic rate is equal to the pond late-filling rate.
#Q7. This is a two-tailed test.
#Q8. p-value = 0.01193 ????????????
#Q9. 0.3526250 0.7261295, it does not include 0
#Q10. I conclude that there is strong evidence to reject the null hypothesis because the p-value is lower than 0.05.
wilcox.test(catrate$cat.rate, mu = 2 / 7, exact=FALSE)
#Q3. The null hypothesis for the Shapiro-Wilk test is that the data were sampled from a normally-distributed population.
#Q4. There is strong evidence that the sample came from a non-normally-distributed population.
#Q5.
t.test(catrate$cat.rate, mu = 2/7)
#Q12. The p-value is 0.006275, lower than the p-value from the t-test.
#Q13. I conclude that there is strong evidence to reject the null hypothesis because the p-value is lower than 0.05.
#Q14. The overall conclusions I could draw from the results of the two tests are the same.
#Q15. The Wilcoxon Rank Sum Test is more appropriate because the data are not normally-distributed.
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
summary(penguin_dat)
boxplot(
flipper_length_mm ~ species,
data = penguin_dat,
ylab = "Flipper Length (mm)")
dat_adelie = subset(penguin_dat, species == "Adelie")
dat_Chinstrap = subset(penguin_dat, species == "Chinstrap")
?shapiro.test()
dat_adelie = subset(penguin_dat, species == "Adelie")
shapiro.test(dat_adelie$flipper_length_mm)
dat_Chinstrap = subset(penguin_dat, species == "Chinstrap")
shapiro.test(dat_Chinstrap$flipper_length_mm)
#Q12. The p-value is 0.006275, lower than the p-value from the t-test.
#Q13. I conclude that there is strong evidence to reject the null hypothesis because the p-value is lower than 0.05.
#Q14. The overall conclusions I could draw from the results of the two tests are the same.
#Q15. The Wilcoxon Rank Sum Test is more appropriate because the data are not normally-distributed.
#Q16.
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
dat_adelie = subset(penguin_dat, species == "Adelie")
shapiro.test(dat_adelie$flipper_length_mm)
dat_Chinstrap = subset(penguin_dat, species == "Chinstrap")
shapiro.test(dat_Chinstrap$flipper_length_mm)
#Q2. p-value = 0.04097
shapiro.test(catrate$cat.rate)
hist(dat_adelie$flipper_length_mm)
hist(dat_Chinstrap$flipper_length_mm)
#Q17. I conclude that the flipper lengths are normally-distributed for both species because the p-values (0.72 for Adelie, 0.8106 for Chinstrap) are higher than 0.05. We fail to reject the null hypothesis.
#Q18.
par(mfrow = c(1, 2))
hist(dat_adelie$flipper_length_mm)
hist(dat_Chinstrap$flipper_length_mm)
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)")
hist(dat_Chinstrap$flipper_length_mm, xlab = "flipper length (mm)")
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length of Adelie Penguin")
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguin")
#Q17. I conclude that the flipper lengths are normally-distributed for both species because the p-values (0.72 for Adelie, 0.8106 for Chinstrap) are higher than 0.05. We fail to reject the null hypothesis.
#Q18.
par(mfrow = c(1, 2))
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguin")
hist(dat_Chinstrap$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Chinstrap Penguin")
#Q17. I conclude that the flipper lengths are normally-distributed for both species because the p-values (0.72 for Adelie, 0.8106 for Chinstrap) are higher than 0.05. We fail to reject the null hypothesis.
#Q18.
par(mfrow = c(1, 2))
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguins")
hist(dat_Chinstrap$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Chinstrap Penguins")
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguins", height = 4)
#Q17. I conclude that the flipper lengths are normally-distributed for both species because the p-values (0.72 for Adelie, 0.8106 for Chinstrap) are higher than 0.05. We fail to reject the null hypothesis.
#Q18.
par(mfrow = c(1, 2))
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguins")
hist(dat_Chinstrap$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Chinstrap Penguins")
height = 4
height = 4
hist(dat_adelie$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Adelie Penguins")
hist(dat_Chinstrap$flipper_length_mm, xlab = "flipper length (mm)", main = "Flipper Length \n of Chinstrap Penguins")
t.test(flipper_length_mm ~ species)
t.test(flipper_length_mm ~ species, data = penguin_dat)
#Calculate a parametric 95% CI for mean bill length (in mm) for the Gentoo penguins
#Q1
require(palmerpenguins)
alpha = 0.05
dat_gentoo = subset(penguins, species == "Gentoo")
n = length(na.omit(dat_gentoo$bill_length_mm))
#Q2
ssd = sd(dat_gentoo$bill_length_mm, na.rm = TRUE)
#Q3
alpha = 0.05
t_crit = abs(qt(alpha / 2, df = n - 1))
#Q4
sse = ssd / sqrt(n)
#Q5
ci_radius = sse * t_crit
sse
#Calculate a parametric 95% CI for mean bill length (in mm) for the Gentoo penguins
#Q1
require(palmerpenguins)
alpha = 0.05
dat_gentoo = subset(penguins, species == "Gentoo")
n = length(na.omit(dat_gentoo$bill_length_mm))
#Q2
ssd = sd(dat_gentoo$bill_length_mm, na.rm = TRUE)
ssd
#Q2
ssd = sd(dat_gentoo$bill_length_mm, na.rm = TRUE)
#Q3
alpha = 0.05
t_crit = abs(qt(alpha / 2, df = n - 1))
#Q4
sse = ssd / sqrt(n)
#Q5
ci_radius = sse * t_crit
sse
ci
#Q5
ci_radius = sse * t_crit
ci = c(
lower = mean(dat_gentoo$bill_length_mm, na.rm = TRUE) - ci_radius,
upper = mean(dat_gentoo$bill_length_mm, na.rm = TRUE) + ci_radius)
print(round(ci, 4))
sse = ssd / sqrt(n)
#Q4
sse = ssd / sqrt(n)
sse
#Q4
sse = ssd / sqrt(n)
sse
dat_gentoo$bill_length_mm
mean(dat_gentoo$bill_length_mm, na.rm = TRUE)
#Q5
ci_radius = sse * t_crit
ci = c(
lower = mean(dat_gentoo$bill_length_mm, na.rm = TRUE) - ci_radius,
upper = mean(dat_gentoo$bill_length_mm, na.rm = TRUE) + ci_radius)
print(round(ci, 4))
sse
#Load these functions, named the same in Jesse's code
source("functions/data_manager.R")
data(iris)
fit_species =
lm(
Sepal.Length ~ Species,
data = iris)
Species
head(iris)
iris$Species
virginica = subset (iris, Species == "virginica")
mean(virginica$Sepal.Length)
virginica = subset (iris, Species == "virginica")
mean(virginica$Sepal.Length)
?citation
citation()
ginkgo = read.csv("/Users/stonehuang/Documents/environmental_data/data/ginkgo_data_2022.csv")
?subset
subset(ginkgo, select = c(seeds_present, site_id))
?unique
unique(subset(ginkgo, select = c(seeds_present, site_id)))
nrow(unique(subset(ginkgo, select = c(seeds_present, site_id))))
nrow(unique(subset(ginkgo, select = c(seeds_present, site_id))))
nrow(ID)
ID = unique(subset(ginkgo, select = c(seeds_present, site_id)))
nrow(ID)
subset(ID, seeds_present == TRUE)
head(ginkgo)
#22
#4
boxplot(max_width ~ seeds_present, data = ginkgo)
plot(x = max_depth, y = max_width, data = ginkgo)
plot(x = ginkgo$max_depth, y = ginkgo$max_width)
plot(x = ginkgo$max_depth, y = ginkgo$max_width, xlab = "max leaf depth (mm)", ylab = "max leaf width (mm)", main = "Scatterplot of max leaf depth and max leaf width")
plot(x = ginkgo$max_depth, y = ginkgo$max_width, xlab = "Max leaf depth (mm)", ylab = "Max leaf width (mm)", main = "Scatterplot of max leaf depth and max leaf width")
rope = read.csv("/Users/stonehuang/Documents/environmental_data/data/rope.csv")
rm(list = ls())
rope$rope.type = factor(rope$rope.type)
rope = read.csv("/Users/stonehuang/Documents/environmental_data/data/rope.csv")
rope$rope.type = factor(rope$rope.type)
levels(rope$rope.type)
n_obs = nrow(rope)
n_obs
rope$rope.type
levels(rope$rope.type)
n_groups = levels(rope$rope.type)
n_groups
n_groups = length(levels(rope$rope.type))
n_groups
mean(rope$p.cut)
grandmean = mean(rope$p.cut)
residuals = grandmean - rope$p.cut
residuals
ss_tot = sum(residuals ^ 2)
ss_tot
n_obs
agg_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = mean - rope$p.cut)
mean
agg_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = function(x) mean(x) - x)
agg_resids
str(agg_resids)
agg_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = function(x) x - mean(x))
str(agg_resids)
agg_sum_sq_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = function(x) sum((x - mean(x))^2))
str(agg_sum_sq_resids)
ss_within = sum(agg_sum_sq_resids$x)
ss_within
agg_sum_sq_resids$x
ss_within
ss_tot
df_tot = n_obs - 1
df_tot
ss_tot
df_within
df_within = n_obs - n_groups
df_within
ss_among
ss_among = ss_tot - ss_within
ss_among
df_among = n_groups - 1
df_among
ms_within = ss_within / df_within
ms_among  = ss_among / df_among
f_ratio = ms_among / ms_within
f_ratio
ms_within
f_ratio
?pf
ss_within
f_pval = pf(f_ratio, df_among, df_within)
f_pval
f_pval
pf(f_ratio, df_among, df_within)
f_ratio
f_pval
rm(list = ls())
rope = read.csv("/Users/stonehuang/Documents/environmental_data/data/rope.csv")
rope$rope.type = factor(rope$rope.type)
levels(rope$rope.type)
n_obs = nrow(rope)
n_groups = length(levels(rope$rope.type))
grandmean = mean(rope$p.cut)
residuals = grandmean - rope$p.cut
ss_tot = sum(residuals ^ 2)
df_tot = n_obs - 1
agg_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = function(x) x - mean(x))
str(agg_resids)
#sums of squared residuals within each group
agg_sum_sq_resids =
aggregate(
x = rope$p.cut,
by = list(rope$rope.type),
FUN = function(x) sum((x - mean(x))^2))
str(agg_sum_sq_resids)
ss_within = sum(agg_sum_sq_resids$x)
df_within = n_obs - n_groups
ss_among = ss_tot - ss_within
df_among = n_groups - 1
ms_within = ss_within / df_within
ms_among  = ss_among / df_among
f_ratio = ms_among / ms_within
f_pval = 1 - pf(f_ratio, df_among, df_within)
f_pval
#ANOVA in R
fit_1 = lm(p.cut ~ rope.type, data=rope)
anova(fit_1)
anova_fit_1 = anova(fit_1)
str(anova_fit_1)
# number comparison tolerance
digits_check = 5
# Build the reference model using R functions
fit_1 = lm(p.cut ~ rope.type, data=rope)
anova(fit_1)
anova_fit_1 = anova(fit_1)
# Check degrees of freedom
anova_fit_1$Df == c(df_among, df_within)
# Check sums of squares
round(anova_fit_1$`Sum Sq`, digits = digits_check) == round(c(ss_among, ss_within), digits = digits_check)
# Check mean squares
round(anova_fit_1$`Mean Sq`, digits = digits_check) == round(c(ms_among, ms_within), digits = digits_check)
# Check the F-ratio
round(anova_fit_1$`F value`[1], digits = digits_check) == round(f_ratio, digits = digits_check)
# Check the F test statistic p-value
round(anova_fit_1$`Pr(>F)`[1], digits = digits_check) == round(f_pval, digits = digits_check)
bartlett.test(p.cut ~ rope.type, data = rope)
fit_rope_1 = lm(p.cut ~ rope.type, data = rope)
summary(fit_rope_1)
levels(rope$rope.type)
fit_rope_1$coefficients
sum(fit_rope_1$coefficients)
0.36714 - 0.10164
#Q5 BLAZE
#Q6 0.36714 I got this number from the intercept
#Q7 0.2655
0.36714 + (-0.10164)
0.36714 + (-0.10164)
#Q8
residuals(fit_1)
#Q8
shapiro.test(residuals(fit_1))
agg_resids
str(agg_resids)
sapply?
?sapply
?sapply
#Q9 The model residuals do not meet the normality assumption because the p-value is lower than 0.05 so we reject the null hypothesis of the normality test.
#Q10
sapply(agg_resids, shapiro.test(x))
#Q9 The model residuals do not meet the normality assumption because the p-value is lower than 0.05 so we reject the null hypothesis of the normality test.
#Q10
sapply(x = agg_resids, shapiro.test(x))
#Q9 The model residuals do not meet the normality assumption because the p-value is lower than 0.05 so we reject the null hypothesis of the normality test.
#Q10
sapply(agg_resids, function(x) = shapiro.test(x))
#Q9 The model residuals do not meet the normality assumption because the p-value is lower than 0.05 so we reject the null hypothesis of the normality test.
#Q10
sapply(agg_resids, function(x) shapiro.test(x))
sapply(x = agg_resids, FUN = shapiro.test(x))
sapply(x = agg_resids, FUN = function(x) shapiro.test(x))
sapply(x = agg_resids, FUN = function(x) shapiro.test(x))
str(agg_resids)
sapply(x = agg_resids$x, FUN = function(x) shapiro.test(x))
sapply(x = agg_resids$x, FUN = function(x) shapiro.test(x))
sapply(X = agg_resids$x, FUN = function(x) shapiro.test(x))
require(palmerpenguins)
pen_fem = subset(penguins, sex == "female")
head(pen_fem)
boxplot(body_mass_g ~ sex)
boxplot(body_mass_g ~ species, data = pen_fem)
boxplot(body_mass_g ~ species, data = pen_fem, main = "Female penguins body mass by species")
boxplot(body_mass_g ~ species, data = pen_fem, main = "Female penguins body mass by species", xlab = "Species", ylab = "Body mass (g)")
#Q13 I do not anticipate problems with residual normality, or homogeneity of variances because the boxes are in similar size (similar variance).
#Q14
bartlett.test(body_mass_g ~ species, data = pen_fem)
#Q15
fit_penguin = lm(body_mass_g ~ species, data=pen_fem)
shapiro.test(residuals(fit_penguin))
#Q16
penguin_hsd = TukeyHSD(aov(fit_penguin))
round(rope2_hsd$rope.type, digits = 4)
round(penguin_hsd$rope.type, digits = 4)
round(penguin_hsd$species, digits = 4)
